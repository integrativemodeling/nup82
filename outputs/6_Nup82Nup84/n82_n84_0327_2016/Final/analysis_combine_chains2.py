from math import sqrt

from Bio.PDB import *
#from Bio.PDB.PDBParser import PDBParser
import argparse

parser = argparse.ArgumentParser(description='Extract PDB chains')
parser.add_argument('-pdb1', action="store", dest="pdbfile1", help="the pdb file" )
parser.add_argument('-pdb2', action="store", dest="pdbfile2", help="the pdb file" )
parser.add_argument('-pdb3', action="store", dest="pdbfile3", help="the pdb file" )
parser.add_argument('-pdb4', action="store", dest="pdbfile4", help="the pdb file" )
parser.add_argument('-pdb5', action="store", dest="pdbfile5", help="the pdb file" )
parser.add_argument('-pdb6', action="store", dest="pdbfile6", help="the pdb file" )
parser.add_argument('-pdb7', action="store", dest="pdbfile7", help="the pdb file" )
parser.add_argument('-pdb8', action="store", dest="pdbfile8", help="the pdb file" )
parser.add_argument('-pdb9', action="store", dest="pdbfile9", help="the pdb file" )
parser.add_argument('-pdb10', action="store", dest="pdbfile10", help="the pdb file" )
parser.add_argument('-pdb11', action="store", dest="pdbfile11", help="the pdb file" )
parser.add_argument('-pdb12', action="store", dest="pdbfile12", help="the pdb file" )
parser.add_argument('-pdb13', action="store", dest="pdbfile13", help="the pdb file" )
parser.add_argument('-pdb14', action="store", dest="pdbfile14", help="the pdb file" )
parser.add_argument('-pdb15', action="store", dest="pdbfile15", help="the pdb file" )
parser.add_argument('-pdb16', action="store", dest="pdbfile16", help="the pdb file" )
parser.add_argument('-pdb17', action="store", dest="pdbfile17", help="the pdb file" )

parser.add_argument('-out', action="store", dest="outfile", help="the pdb file" )

parser=parser.parse_args()

pdbparser = PDBParser()

structure1 = pdbparser.get_structure(parser.pdbfile1, parser.pdbfile1)
structure2 = pdbparser.get_structure(parser.pdbfile2, parser.pdbfile2)
structure3 = pdbparser.get_structure(parser.pdbfile3, parser.pdbfile3)
structure4 = pdbparser.get_structure(parser.pdbfile4, parser.pdbfile4)
structure5 = pdbparser.get_structure(parser.pdbfile5, parser.pdbfile5)
structure6 = pdbparser.get_structure(parser.pdbfile6, parser.pdbfile6)
structure7 = pdbparser.get_structure(parser.pdbfile7, parser.pdbfile7)
structure8 = pdbparser.get_structure(parser.pdbfile8, parser.pdbfile8)
structure9 = pdbparser.get_structure(parser.pdbfile9, parser.pdbfile9)
structure10 = pdbparser.get_structure(parser.pdbfile10, parser.pdbfile10)
structure11 = pdbparser.get_structure(parser.pdbfile11, parser.pdbfile11)
structure12 = pdbparser.get_structure(parser.pdbfile12, parser.pdbfile12)
structure13 = pdbparser.get_structure(parser.pdbfile13, parser.pdbfile13)
structure14 = pdbparser.get_structure(parser.pdbfile14, parser.pdbfile14)
structure15 = pdbparser.get_structure(parser.pdbfile15, parser.pdbfile15)
structure16 = pdbparser.get_structure(parser.pdbfile16, parser.pdbfile16)
structure17 = pdbparser.get_structure(parser.pdbfile17, parser.pdbfile17)

outfile=open(parser.outfile, "w")
io = PDBIO(1)
io.set_structure(structure1)
io.save(outfile, write_end=True)
io.set_structure(structure2)
io.save(outfile, write_end=True)
io.set_structure(structure3)
io.save(outfile, write_end=True)
io.set_structure(structure4)
io.save(outfile, write_end=True)
io.set_structure(structure5)
io.save(outfile, write_end=True)
io.set_structure(structure6)
io.save(outfile, write_end=True)
io.set_structure(structure7)
io.save(outfile, write_end=True)
io.set_structure(structure8)
io.save(outfile, write_end=True)
io.set_structure(structure9)
io.save(outfile, write_end=True)
io.set_structure(structure10)
io.save(outfile, write_end=True)
io.set_structure(structure11)
io.save(outfile, write_end=True)
io.set_structure(structure12)
io.save(outfile, write_end=True)
io.set_structure(structure13)
io.save(outfile, write_end=True)
io.set_structure(structure14)
io.save(outfile, write_end=True)
io.set_structure(structure15)
io.save(outfile, write_end=True)
io.set_structure(structure16)
io.save(outfile, write_end=True)
io.set_structure(structure17)
io.save(outfile, write_end=True)
outfile.close()

